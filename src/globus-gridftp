#!/bin/sh
#
# globus-gridftp Init file for the Globus Gridftp server
# Original Author: Shu-Ting Liao

# chkconfig: 345 90 10
# description: This shell script takes care of starting and stopping

### BEGIN INIT INFO
# Provides: globus-gridftp
# Required-Start: $local_fs
# Required-Stop: $local_fs
# Should-Start:
# Should-Stop:
# Default-Start: 3 4 5
# Default-Stop: 0 1 2 6
# Short-Description: Globus GridFTP Server
# Description:
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions
###############  Standard Globus configuration  ######################

GLOBUS_SYSCONFIG=${GLOBUS_SYSCONFIG:-/etc/sysconfig/globus}
if [ -f "$GLOBUS_SYSCONFIG" ]; then
    . "$GLOBUS_SYSCONFIG"
fi

GRIDFTP_SYSCONFIG=${GRIDFTP_SYSCONFIG:-/etc/sysconfig/globus-gridftp}
if [ -f "$GRIDFTP_SYSCONFIG" ]; then
    . "$GRIDFTP_SYSCONFIG"
fi

GLOBUS_LOCATION=${GLOBUS_LOCATION:-/opt/globus}
if [ ! -d "$GLOBUS_LOCATION" ]; then
  echo "GLOBUS_LOCATION not found"
  exit 1
fi
export GLOBUS_LOCATION

if [ -n "$GLOBUS_TCP_PORT_RANGE" ]; then
  export GLOBUS_TCP_PORT_RANGE
fi

if [ -n "$GLOBUS_UDP_PORT_RANGE" ]; then
  export GLOBUS_UDP_PORT_RANGE
fi



###############

umask=${umask:-022}

RETVAL=0
prog="globus-gridftp-server"

GLITE_ENVSCRIPT=${GLITE_ENVSCRIPT:-/etc/profile.d/grid-env.sh}
if [ -f "$GLITE_ENVSCRIPT" ]; then
    . "$GLITE_ENVSCRIPT"
fi

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$GLOBUS_LOCATION/lib

# check if executable exists
[ -x $GLOBUS_LOCATION/sbin/$prog ] || exit 0

case $1 in
 start)
      echo -n "Starting $prog"   
      daemon sh -c "'umask $umask; \
        exec $GLOBUS_LOCATION/sbin/$prog -p 2811 -S \
        -d ${GRIDFTP_LOG_LEVELS:-error,warn,info} \
        -l ${GRIDFTP_SESSION_LOG:-/var/log/gridftp-session.log} \
        -Z ${GRIDFTP_TRANSFER_LOG:-/var/log/globus-gridftp.log}'"
      RETVAL=$?
      echo
      exit $RETVAL
 ;;
 stop)
      echo -n $"Shutting down $prog: "
      killproc ${prog}
      RETVAL=$?
      echo
      exit $RETVAL
 ;;
 restart)
      $0 stop
      $0 start
 ;;
 status)
      status ${prog}
      RETVAL=$?
      exit $RETVAL
 ;;
 * )
      echo "Usage: $0 {start|stop|restart|status}"
    ;;
esac
exit $?
